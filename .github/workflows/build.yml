name: Build

on:
  pull_request:

jobs:
  # Checks for whether author of commit is a contributor 
  collab-check:
    runs-on: ubuntu-latest
    outputs: 
      approval-env: ${{ steps.collab-check.outputs.result }}
    steps:
      - name: Collaborator Check
        uses: actions/github-script@v7
        id: collab-check
        with:
          result-encoding: string
          script: | 
            try {
              const res = await github.rest.repos.checkCollaborator({
                owner: context.repo.owner,
                repo: context.repo.repo,
                username: "${{ github.event.pull_request.user.login }}",
              });
              console.log("Verifed ${{ github.event.pull_request.user.login }} is a repo collaborator. Auto Approving PR Checks.")
              return res.status == "204" ? "auto-approve" : "manual-approval"
            } catch (error) {
              console.log("${{ github.event.pull_request.user.login }} is not a collaborator. Requiring Manual Approval to run PR Checks.")
              return "manual-approval"
            }
  # Manual approval is necessary if author of commit is not contributor
  wait-for-approval:
    runs-on: ubuntu-latest
    needs: [collab-check]
    environment: ${{ needs.collab-check.outputs.approval-env }}
    steps:
      - run: echo "Workflow Approved! Starting build."

  build:
    runs-on: ubuntu-latest
    needs: [wait-for-approval]
    permissions:
      pull-requests: write
      id-token: write
      contents: read

    steps:

      # Set up and Install required dependencies
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      # Check out code from PR and initiate build process
      - uses: actions/checkout@v2
      - name: Build
        run: |
          echo Build started on `date`
          echo Verifying scala package build, code format and test coverage
          cd scala-spark-sdk
          sbt scalafmtCheckAll jacoco
          cd ..
          echo Scala pacakge build verification finished
          echo Packaging pyspark library according to setup.py
          cd pyspark-sdk
          python setup.py sdist
          tox
          cd ..
          echo Packaging finished, preparing artifacts for the integration tests
          mkdir processedArtifacts
          cp -R pyspark-sdk/integration_test processedArtifacts
          cp -R pyspark-sdk/dist processedArtifacts

      # Upload processed artifacts to be used for running the integration tests in subsequent integration tests workflow
      - uses: actions/upload-artifact@v2
        with:
          name: processedArtifacts
          path: processedArtifacts/
